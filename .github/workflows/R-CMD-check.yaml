on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'oldrel',  AS_CRAN: true}
          - {os: windows-latest, r: 'release', AS_CRAN: true}
          - {os: macOS-latest,   r: 'oldrel',  AS_CRAN: true}
          - {os: macOS-latest,   r: 'release', AS_CRAN: true}
          - {os: ubuntu-16.04,   r: 'oldrel',  AS_CRAN: true,                      cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04,   r: 'release', AS_CRAN: true, BUILD_PKGDOWN: true, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04,   r: 'devel',   cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      AS_CRAN: ${{ matrix.config.AS_CRAN }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: >
          Rscript
            -e "install.packages('remotes')"
            -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: >
          Rscript
            -e "library(remotes)"
            -e "update(readRDS('depends.Rds'))"
            -e "remotes::install_cran('rcmdcheck')"
            -e 'remotes::install_github("jimhester/pkgdown@github-actions-deploy")'

      - name: Check
        run: >
          Rscript
            -e "args <- if (Sys.getenv('AS_CRAN', FALSE)) '--as-cran' else '--no-manual'; rcmdcheck::rcmdcheck(args = args, error_on = 'warning', check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Deploy package site
        if: matrix.config.BUILD_PKGDOWN && ${{github.ref}} == "master"
        run: |
          pkgdown:::deploy_local(new_process = FALSE, remote_url = 'https://x-access-token:${{secrets.DEPLOY_PAT}}@github.com/${{github.repository}}.git')
        shell: Rscript {0}

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-16.04' && matrix.config.r == 'release'
        run: >
          Rscript
            -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
