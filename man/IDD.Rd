% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/idd.R
\docType{class}
\name{IDD}
\alias{IDD}
\title{Parse EnergyPlus IDD files}
\value{
An IDD object
}
\description{
\code{eplusr} provides parsing of and programmatic access to EnergyPlus
Input Data Dictionary (IDD) files, and objects. It contains all data needed
to parse EnergyPlus models. IDD objects provide parsing and printing
}
\details{
The IDD objects for EnergyPlus 8.5 to 8.8 have been pre-parsed and
stored internally and will automatically be used when parsing \code{IDF} and
\code{IMF} files. Internally, the powerful \code{data.table} package is used
to speed up the whole process and store the results. However, it will still
take about 5-6 sec to parse an IDD file.

Normally, you may not need to parse any Energy+.idd file unless your model
is produced by EnergyPlus whose version is lower than 8.5. If so, it is
suggested to store the parsed IDD object and directly pass it to the
\code{idd} argument in \code{eplusr_model$new} in order to avoid the parsing
process whenever you read a model of that version.
}
\section{Usage}{
\preformatted{
idd <- IDD$new(path)

idd$version()
idd$build()
idd$class_name(group = NULL)
idd$group_name(class = NULL)
idd$group_order(group = NULL)
idd$class_order(class = NULL)
idd$orders()

idd$object(class)
idd$objects(class = NULL)
idd$objects_in_group(group)

idd$is_valid_class(class)
idd$is_valid_group(group)

idd$print()

print(idd)

}
}

\section{Arguments}{

\itemize{
\item \code{path}: Path to an EnergyPlus Input Data Dictionary (IDD) file, usually
named as \code{Energy+.idd}.
\item \code{group}: A valid group name or valid group names.
\item \code{class}: A valid class name or valid class names.
}
}

\section{Detail}{


\code{IDD$new()} parses an EnergyPlus Input Data Dictionary (IDD) file, and
returns an IDD object.

\code{$version()} returns the version string of current idd file.

\code{$build()} returns the build tag string of current idd file.

\code{$group_name(class)} returns group name that that \code{class} belong to.

\code{$class_name(group)} returns class names of that \code{group}. If \code{group} not
given, all class names in current IDD are returned.

\code{$group_order(group)} returns integer orders (orders of name apperarance in
the IDD file) of that \code{group}.

\code{$class_order(class)} returns integer orders (orders of name apperarance in
the IDD file) of that \code{class}.

\code{$orders()} returns the all order data (stored as a data.table with four
columns, i.e. "group", "group_order", "class", "class_order").

\code{$object(class)} returns an IDDObject of that \code{class}.

\code{$objects(class)} returns a list of IDDObjects of \code{class}es. If \code{class} is
NULL, all IDDObjects in current IDD are returned.

\code{$objects_in_group(group)} returns a list of IDDObjects in that \code{group}.

\code{$is_valid_group(group)} return \code{TRUE} if the input is a valid \code{group} name.

\code{$is_valid_class(class)} return \code{TRUE} if the input is a valid \code{class} name.
}

\references{
\href{https://github.com/NREL/EnergyPlus/tree/develop/src/IDF_Editor}{IDFEditor
source code}
}
\author{
Hongyuan Jia
}
