% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/idfobj-sch.R
\docType{class}
\name{IdfSchedule}
\alias{IdfSchedule}
\alias{IdfScheduleCompact}
\title{Create and Modify an EnergyPlus Schedule}
\description{
\code{IdfScheduleCompact} is an abstraction of a single schedule in an \link{Idf}. It
provides more detailed methods to modify schedule values.
}
\examples{

## ------------------------------------------------
## Method `IdfScheduleCompact$set`
## ------------------------------------------------

\dontrun{
sch$set(c("weekday", "summerdesignday") := list(
    ..6 = 0.2, "8:00" = 0.5,
    ..12 = 0.95, "13:30" = 0.6, ..14 = 0.8,
    ..18 = 0.95, ..19 = 0.2, ..24 = 0),
    allotherday = list(..24 = 0)
)
}

## ------------------------------------------------
## Method `IdfScheduleCompact$update`
## ------------------------------------------------

\dontrun{
sch$update(sch$extract())
}

## ------------------------------------------------
## Method `IdfScheduleCompact$validate`
## ------------------------------------------------

\dontrun{
sch$validate()
}

## ------------------------------------------------
## Method `IdfScheduleCompact$extract`
## ------------------------------------------------

\dontrun{
sch$extract()
sch$extract("expand")
sch$extract(timestep = "30 mins")
}
}
\seealso{
\link{Idf} class
}
\author{
Hongyuan Jia
}
\section{Super classes}{
\code{\link[eplusr:IdfObject]{eplusr::IdfObject}} -> \code{\link[eplusr:IdfSchedule]{eplusr::IdfSchedule}} -> \code{IdfScheduleCompact}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{IdfScheduleCompact$new()}}
\item \href{#method-type_limits}{\code{IdfScheduleCompact$type_limits()}}
\item \href{#method-set}{\code{IdfScheduleCompact$set()}}
\item \href{#method-update}{\code{IdfScheduleCompact$update()}}
\item \href{#method-validate}{\code{IdfScheduleCompact$validate()}}
\item \href{#method-extract}{\code{IdfScheduleCompact$extract()}}
\item \href{#method-clone}{\code{IdfScheduleCompact$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="class_name">}\href{../../eplusr/html/IdfObject.html#method-class_name}{\code{eplusr::IdfObject$class_name()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="comment">}\href{../../eplusr/html/IdfObject.html#method-comment}{\code{eplusr::IdfObject$comment()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="definition">}\href{../../eplusr/html/IdfObject.html#method-definition}{\code{eplusr::IdfObject$definition()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="group_name">}\href{../../eplusr/html/IdfObject.html#method-group_name}{\code{eplusr::IdfObject$group_name()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="has_ref">}\href{../../eplusr/html/IdfObject.html#method-has_ref}{\code{eplusr::IdfObject$has_ref()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="has_ref_by">}\href{../../eplusr/html/IdfObject.html#method-has_ref_by}{\code{eplusr::IdfObject$has_ref_by()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="has_ref_node">}\href{../../eplusr/html/IdfObject.html#method-has_ref_node}{\code{eplusr::IdfObject$has_ref_node()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="has_ref_to">}\href{../../eplusr/html/IdfObject.html#method-has_ref_to}{\code{eplusr::IdfObject$has_ref_to()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="id">}\href{../../eplusr/html/IdfObject.html#method-id}{\code{eplusr::IdfObject$id()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="is_valid">}\href{../../eplusr/html/IdfObject.html#method-is_valid}{\code{eplusr::IdfObject$is_valid()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="name">}\href{../../eplusr/html/IdfObject.html#method-name}{\code{eplusr::IdfObject$name()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="parent">}\href{../../eplusr/html/IdfObject.html#method-parent}{\code{eplusr::IdfObject$parent()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="print">}\href{../../eplusr/html/IdfObject.html#method-print}{\code{eplusr::IdfObject$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="ref_by_object">}\href{../../eplusr/html/IdfObject.html#method-ref_by_object}{\code{eplusr::IdfObject$ref_by_object()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="ref_to_node">}\href{../../eplusr/html/IdfObject.html#method-ref_to_node}{\code{eplusr::IdfObject$ref_to_node()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="ref_to_object">}\href{../../eplusr/html/IdfObject.html#method-ref_to_object}{\code{eplusr::IdfObject$ref_to_object()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="to_string">}\href{../../eplusr/html/IdfObject.html#method-to_string}{\code{eplusr::IdfObject$to_string()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="to_table">}\href{../../eplusr/html/IdfObject.html#method-to_table}{\code{eplusr::IdfObject$to_table()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="value">}\href{../../eplusr/html/IdfObject.html#method-value}{\code{eplusr::IdfObject$value()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="value_possible">}\href{../../eplusr/html/IdfObject.html#method-value_possible}{\code{eplusr::IdfObject$value_possible()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="value_relation">}\href{../../eplusr/html/IdfObject.html#method-value_relation}{\code{eplusr::IdfObject$value_relation()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="IdfObject" data-id="version">}\href{../../eplusr/html/IdfObject.html#method-version}{\code{eplusr::IdfObject$version()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create an \code{IdfScheduleCompact} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$new(object, parent, new = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{An integer specifying an object ID.}

\item{\code{parent}}{An \link{Idf} object specifying the parent object.}

\item{\code{new}}{If \code{TRUE}, an empty \code{IdfScheduleCompact} will be created.
Default: \code{FALSE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{IdfScheduleCompact} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-type_limits"></a>}}
\if{latex}{\out{\hypertarget{method-type_limits}{}}}
\subsection{Method \code{type_limits()}}{
Get or set the schedule type limits
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$type_limits(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A string specifying the name of an \code{ScheduleTypeLimits}
object in current \link{Idf}. If missing, value of last time will
be used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of 2 elements:
\itemize{
\item \code{name}: The name of the \code{ScheduleTypeLimits} object
\item \code{range}: The range of current schedule values
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set"></a>}}
\if{latex}{\out{\hypertarget{method-set}{}}}
\subsection{Method \code{set()}}{
Set schedule values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$set(..., .check_range = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Schedule day types and value specifications in lists.
\itemize{
\item Group day types inside \code{c(...)} at the LHS of \verb{:=}
\item Put actual schedule values inside \code{list(...)} at the RHS of \verb{:=}
\item Each schedule value should be named a time. Time can be given in
either \code{..H} or \code{"HH:MM"}.
}}

\item{\code{.check_range}}{If \code{TRUE}, schedule values will be checked based
on \verb{$type_limits()}. Default: \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified \code{IdfScheduleCompact} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sch$set(c("weekday", "summerdesignday") := list(
    ..6 = 0.2, "8:00" = 0.5,
    ..12 = 0.95, "13:30" = 0.6, ..14 = 0.8,
    ..18 = 0.95, ..19 = 0.2, ..24 = 0),
    allotherday = list(..24 = 0)
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update"></a>}}
\if{latex}{\out{\hypertarget{method-update}{}}}
\subsection{Method \code{update()}}{
Update schedule values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$update(data, check_range = TRUE, compact = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A \code{\link[data.table:data.table]{data.table::data.table()}} of at least 4 columns:
\itemize{
\item \code{year_day}
\item \code{daytype}
\item \code{time}
\item \code{value}
}}

\item{\code{check_range}}{If \code{TRUE}, schedule values will be checked based
on \verb{$type_limits()}. Default: \code{TRUE}.}

\item{\code{compact}}{If \code{TRUE}, same schedule values from different day
types will be compacted together. Also, time periods that have
the same schedule values will also be compacted. Default:
\code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified \code{IdfScheduleCompact} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sch$update(sch$extract())
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
Validate schedule values

Check schedule values based on \verb{$type_limits()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An \code{IdfValidity} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sch$validate()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-extract"></a>}}
\if{latex}{\out{\hypertarget{method-extract}{}}}
\subsection{Method \code{extract()}}{
Extract schedule values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$extract(daytype = NULL, timestep = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{daytype}}{If \code{"compact"}, same schedule values from different day
types will be compacted together. If \code{"expand"}, all compacted
day types will be expanded. Default: \code{NULL}.}

\item{\code{timestep}}{If specified, the time step of schedule values will
be updated if possible. Default: \code{NULL}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[data.table:data.table]{data.table::data.table()}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sch$extract()
sch$extract("expand")
sch$extract(timestep = "30 mins")
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdfScheduleCompact$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
