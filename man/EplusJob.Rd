% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job.R
\docType{class}
\name{EplusJob}
\alias{EplusJob}
\title{Run EnergyPlus Simulation and Collect Outputs}
\description{
\code{EplusJob} class wraps the EnergyPlus command line interface and provides
methods to extract simulation outputs.
}
\details{
eplusr uses the EnergyPlus SQL output for extracting simulation outputs.
\code{EplusJob} has provide some wrappers that do SQL query to get report data
results, i.e. results from \code{Output:Variable} and \verb{Output:Meter*}. But for
\code{Output:Table} results, you have to be familiar with the structure of the
EnergyPlus SQL results, especially for table \emph{"TabularDataWithStrings"}. For
details, please see \emph{"2.20 eplusout.sql"}, especially \emph{"2.20.4.4 TabularData
Table"} in EnergyPlus \emph{"Output Details and Examples"} documentation. An
object in \code{Output:SQLite} with \verb{Option Type} value of \code{SimpleAndTabular} will
be automatically created if it does not exists, to ensure that the output
collection functionality works successfully.

In order to make sure \code{.rdd} (Report Data Dictionary) and \code{.mdd} (Meter Data
Dictionary) files are created during simulation, an object in
\code{Output:VariableDictionary} class with \verb{Key Field} value being \code{IDF} will be
automatically created if it does not exists.
}
\examples{

## ------------------------------------------------
## Method `EplusJob$new`
## ------------------------------------------------

if (is_avail_eplus(8.8)) {
    idf_name <- "1ZoneUncontrolled.idf"
    epw_name <-  "USA_CA_San.Francisco.Intl.AP.724940_TMY3.epw"

    idf_path <- file.path(eplus_config(8.8)$dir, "ExampleFiles", idf_name)
    epw_path <- file.path(eplus_config(8.8)$dir, "WeatherData", epw_name)

    job <- EplusJob$new(idf_path, epw_path)
}

## ------------------------------------------------
## Method `EplusJob$version`
## ------------------------------------------------

\dontrun{
job$version()
}


## ------------------------------------------------
## Method `EplusJob$path`
## ------------------------------------------------

\dontrun{
job$path()
job$path("idf")
job$path("epw")
}


## ------------------------------------------------
## Method `EplusJob$run`
## ------------------------------------------------

\dontrun{
# only run design day
job$run(NULL)

# specify output directory
job$run(tempdir())

# run in the background
job$run(wait = TRUE)
# see job status
job$status()

# force to kill background job before running the new one
job$run(force = TRUE)

# do not show anything in the console
job$run(echo = FALSE)

# copy external files used in the model to simulation output directory
job$run(copy_external = TRUE)
}


## ------------------------------------------------
## Method `EplusJob$kill`
## ------------------------------------------------

\dontrun{
job$kill()
}


## ------------------------------------------------
## Method `EplusJob$status`
## ------------------------------------------------

\dontrun{
job$status()
}


## ------------------------------------------------
## Method `EplusJob$errors`
## ------------------------------------------------

\dontrun{
job$errors()

# show all information
job$errors(info = TRUE)
}


## ------------------------------------------------
## Method `EplusJob$output_dir`
## ------------------------------------------------

\dontrun{
job$output_dir()

# open output directory
job$output_dir(open = TRUE)
}


## ------------------------------------------------
## Method `EplusJob$locate_output`
## ------------------------------------------------

\dontrun{
# get the file path of the error file
job$locate_output(".err", strict = FALSE)

# can use to detect if certain output file exists
job$locate_output(".expidf", strict = TRUE)
}


## ------------------------------------------------
## Method `EplusJob$read_rdd`
## ------------------------------------------------

\dontrun{
job$read_rdd()
}


## ------------------------------------------------
## Method `EplusJob$read_mdd`
## ------------------------------------------------

\dontrun{
job$read_mdd()
}


## ------------------------------------------------
## Method `EplusJob$print`
## ------------------------------------------------

\dontrun{
job$print()
}

}
\seealso{
\link{ParametricJob} class for EnergyPlus parametric simulations.
}
\author{
Hongyuan Jia
}
\section{Super class}{
\code{\link[eplusr:EplusSql]{eplusr::EplusSql}} -> \code{EplusJob}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EplusJob$new()}}
\item \href{#method-version}{\code{EplusJob$version()}}
\item \href{#method-path}{\code{EplusJob$path()}}
\item \href{#method-run}{\code{EplusJob$run()}}
\item \href{#method-kill}{\code{EplusJob$kill()}}
\item \href{#method-status}{\code{EplusJob$status()}}
\item \href{#method-errors}{\code{EplusJob$errors()}}
\item \href{#method-output_dir}{\code{EplusJob$output_dir()}}
\item \href{#method-locate_output}{\code{EplusJob$locate_output()}}
\item \href{#method-read_rdd}{\code{EplusJob$read_rdd()}}
\item \href{#method-read_mdd}{\code{EplusJob$read_mdd()}}
\item \href{#method-print}{\code{EplusJob$print()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="list_table">}\href{../../eplusr/html/EplusSql.html#method-list_table}{\code{eplusr::EplusSql$list_table()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="path_idf">}\href{../../eplusr/html/EplusSql.html#method-path_idf}{\code{eplusr::EplusSql$path_idf()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="read_table">}\href{../../eplusr/html/EplusSql.html#method-read_table}{\code{eplusr::EplusSql$read_table()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="report_data">}\href{../../eplusr/html/EplusSql.html#method-report_data}{\code{eplusr::EplusSql$report_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="report_data_dict">}\href{../../eplusr/html/EplusSql.html#method-report_data_dict}{\code{eplusr::EplusSql$report_data_dict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="eplusr" data-topic="EplusSql" data-id="tabular_data">}\href{../../eplusr/html/EplusSql.html#method-tabular_data}{\code{eplusr::EplusSql$tabular_data()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create an \code{EplusJob} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$new(idf, epw)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idf}}{Path to an local EnergyPlus IDF file or an \link{Idf} object.}

\item{\code{epw}}{Path to an local EnergyPlus EPW file or an \link{Epw} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{EplusJob} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{if (is_avail_eplus(8.8)) {
    idf_name <- "1ZoneUncontrolled.idf"
    epw_name <-  "USA_CA_San.Francisco.Intl.AP.724940_TMY3.epw"

    idf_path <- file.path(eplus_config(8.8)$dir, "ExampleFiles", idf_name)
    epw_path <- file.path(eplus_config(8.8)$dir, "WeatherData", epw_name)

    job <- EplusJob$new(idf_path, epw_path)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-version"></a>}}
\subsection{Method \code{version()}}{
Get the version of IDF in current job
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$version()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$version()} reutrns the version of IDF that current \code{EplusJob} uses.
}

\subsection{Returns}{
A \code{\link[base:numeric_version]{base::numeric_version()}} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$version()
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-path"></a>}}
\subsection{Method \code{path()}}{
Get the paths of file that current \code{EpwSql} uses
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$path(type = c("all", "idf", "epw"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{If \code{"all"}, both the \link{Idf} path and \link{Epw} path are
returned. If \code{"idf"}, only IDF path is returned. If \code{"epw"},
only EPW path is returned. If \code{epw} is \code{NULL}, \code{NA} is
returned for EPW path. Default: \code{"all"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\verb{$path()} returns the path of IDF or EPW of current job.
}

\subsection{Returns}{
A character vector.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$path()
job$path("idf")
job$path("epw")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\subsection{Method \code{run()}}{
Run simulationA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$run(
  epw,
  dir = NULL,
  wait = TRUE,
  force = FALSE,
  echo = wait,
  copy_external = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{epw}}{A path to an \code{.epw} file or an \link{Epw} object. \code{epw} can
also be \code{NULL} which will force design-day-only simulation.
Note this needs at least one \code{Sizing:DesignDay} object exists
in the \code{Idf}. If not given, the \code{epw} input used when creating
this \code{EplusJob} object will be used.}

\item{\code{dir}}{The directory to save the simulation results. If \code{NULL},
the input \code{idf} folder will be used. Default: \code{NULL}.}

\item{\code{wait}}{If \code{TRUE}, R will hang on and wait for the simulation to
complete. EnergyPlus standard output (stdout) and error
(stderr) is printed to R console. If \code{FALSE}, simulation will
be run in a background process.  Default: \code{TRUE}.}

\item{\code{force}}{Only applicable when the last job runs with \code{wait}
equals to \code{FALSE} and is still running. If \code{TRUE}, current
running job is forced to stop and a new one will start.
Default: \code{FALSE}.}

\item{\code{echo}}{Only applicable when \code{wait} is \code{TRUE}. Whether to show
standard output and error from EnergyPlus. Default: same as
\code{wait}.}

\item{\code{copy_external}}{If \code{TRUE}, the external files that current \code{Idf}
object depends on will also be copied into the simulation
output directory. The values of file paths in the Idf will be
changed automatically. Currently, only \code{Schedule:File} class
is supported.  This ensures that the output directory will
have all files needed for the model to run. Default is
\code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\verb{$run()} runs the simulation using input IDF and EPW file. If \code{wait}
is \code{FALSE}, the job is run in the background. You can get updated job
status by just
\href{../../eplusr/html/EplusJob.html#method-print}{printing}
the \code{EplusJob} object.

Parameter \code{epw} can be used to reset the EPW file to use for
simulation. If not given, the \code{epw} input used when creating
this \code{EplusJob} object will be used.
}

\subsection{Returns}{
The \code{EplusJob} object itself, invisibly.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# only run design day
job$run(NULL)

# specify output directory
job$run(tempdir())

# run in the background
job$run(wait = TRUE)
# see job status
job$status()

# force to kill background job before running the new one
job$run(force = TRUE)

# do not show anything in the console
job$run(echo = FALSE)

# copy external files used in the model to simulation output directory
job$run(copy_external = TRUE)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-kill"></a>}}
\subsection{Method \code{kill()}}{
Kill current running job
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$kill()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$kill()} kills the background EnergyPlus process if possible. It
only works when simulation runs in non-waiting mode.
}

\subsection{Returns}{
A single logical value of \code{TRUE} or \code{FALSE}, invisibly.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$kill()
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-status"></a>}}
\subsection{Method \code{status()}}{
Get the job status
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$status()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$status()} returns a named list of values that indicates the status of the
job:
\itemize{
\item \code{run_before}: \code{TRUE} if the job has been run before. \code{FALSE} otherwise.
\item \code{alive}: \code{TRUE} if the simulation is still running in the background.
\code{FALSE} otherwise.
\item \code{terminated}: \code{TRUE} if the simulation was terminated during last
simulation. \code{FALSE} otherwise. \code{NA} if the job has not been run yet.
\item \code{successful}: \code{TRUE} if last simulation ended successfully. \code{FALSE}
otherwise. \code{NA} if the job has not been run yet.
\item \code{changed_after}: \code{TRUE} if the IDF file has been changed since last
simulation. \code{FALSE} otherwise. \code{NA} if the job has not been run yet.
}
}

\subsection{Returns}{
A named list of 5 elements.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$status()
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-errors"></a>}}
\subsection{Method \code{errors()}}{
Read simulation errors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$errors(info = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{info}}{If \code{FALSE}, only warnings and errors are printed.
Default: \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
$errors() returns an \link[=read_err]{ErrFile} object which contains all
contents of the simulation error file (\code{.err}). If \code{info} is \code{FALSE},
only warnings and errors are printed.
}

\subsection{Returns}{
An \link[=read_err]{ErrFile} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$errors()

# show all information
job$errors(info = TRUE)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-output_dir"></a>}}
\subsection{Method \code{output_dir()}}{
Get simulation output directory
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$output_dir(open = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{open}}{If \code{TRUE}, the output directory will be opened.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\verb{$output_dir()} returns the output directory of simulation results.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$output_dir()

# open output directory
job$output_dir(open = TRUE)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-locate_output"></a>}}
\subsection{Method \code{locate_output()}}{
Get path of output file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$locate_output(suffix = ".err", strict = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{suffix}}{A string that indicates the file extension of
simulation output. Default: \code{".err"}.}

\item{\code{strict}}{If \code{TRUE}, it will check if the simulation was
terminated, is still running or the file exists or not.
Default: \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\verb{$locate_output()} returns the path of a single output file specified
by file suffix.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# get the file path of the error file
job$locate_output(".err", strict = FALSE)

# can use to detect if certain output file exists
job$locate_output(".expidf", strict = TRUE)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_rdd"></a>}}
\subsection{Method \code{read_rdd()}}{
Read Report Data Dictionary (RDD) file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$read_rdd()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$read_rdd()} return the core data of Report Data Dictionary (RDD)
file. For details, please see \code{\link[=read_rdd]{read_rdd()}}.
}

\subsection{Returns}{
An \link[=read_rdd]{RddFile} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$read_rdd()
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_mdd"></a>}}
\subsection{Method \code{read_mdd()}}{
Read Report Data Dictionary (RDD) file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$read_mdd()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$read_mdd()} return the core data of Meter Data Dictionary (MDD)
file. For details, please see \code{\link[=read_mdd]{read_mdd()}}.
}

\subsection{Returns}{
An \link[=read_mdd]{MddFile} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$read_mdd()
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Print \code{EplusSql} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EplusJob$print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
\verb{$print()} shows the core information of this \code{EplusJob} object,
including the path of model and weather, the version and path of
EnergyPlus used to run simulations, and the simulation job status.

\verb{$print()} is quite useful to get the simulation status, especially
when \code{wait} is \code{FALSE} in \verb{$run()}. The job status will be updated
and printed whenever \verb{$print()} is called.
}

\subsection{Returns}{
The \code{EplusSql} object itself, invisibly.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
job$print()
}

}
\if{html}{\out{</div>}}

}

}
}
